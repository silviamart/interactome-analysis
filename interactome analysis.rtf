{\rtf1\ansi\ansicpg1252\cocoartf2576
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 ArialMT;}
{\colortbl;\red255\green255\blue255;\red191\green100\blue38;\red0\green0\blue0;\red254\green187\blue91;
\red88\green118\blue71;\red65\green65\blue65;\red152\green54\blue29;\red86\green132\blue173;\red117\green114\blue185;
\red109\green109\blue109;}
{\*\expandedcolortbl;;\cssrgb\c80000\c47059\c19608;\cssrgb\c0\c0\c0;\cssrgb\c100000\c77647\c42745;
\cssrgb\c41569\c52941\c34902;\cssrgb\c32549\c32549\c32549;\cssrgb\c66667\c28627\c14902;\cssrgb\c40784\c59216\c73333;\cssrgb\c53333\c53333\c77647;
\cssrgb\c50196\c50196\c50196;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs29\fsmilli14667 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 import \cf3 \strokec3 openpyxl\'a0\cf2 \strokec2 as \cf3 \strokec3 xl\
\'a0\cf2 \strokec2 import \cf3 \strokec3 numpy\'a0\cf2 \strokec2 as \cf3 \strokec3 np\
\'a0\cf2 \strokec2 import \cf3 \strokec3 pandas \cf2 \strokec2 as \cf3 \strokec3 pd\
\'a0\
\'a0\
\'a0\cf2 \strokec2 from \cf3 \strokec3 Bio \cf2 \strokec2 import \cf3 \strokec3 Entrez\
\'a0\
\'a0\
\'a0\cf2 \strokec2 def \cf4 \strokec4 search\cf3 \strokec3 (query):\
\'a0\'a0\'a0\'a0 Entrez.email = \cf5 \strokec5 'email' \cf6 \strokec6 #enter email\cf5 \strokec5 \
\'a0\'a0\'a0\'a0 \cf3 \strokec3 handle = Entrez.esearch(\cf7 \strokec7 db\cf3 \strokec3 =\cf5 \strokec5 'pubmed'\cf2 \strokec2 ,\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf7 \strokec7 sort\cf3 \strokec3 =\cf5 \strokec5 'relevance'\cf2 \strokec2 ,\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf7 \strokec7 retmax\cf3 \strokec3 =\cf5 \strokec5 '500'\cf2 \strokec2 ,\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf7 \strokec7 retmode\cf3 \strokec3 =\cf5 \strokec5 'xml'\cf2 \strokec2 ,\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf7 \strokec7 term\cf3 \strokec3 =query)\
\'a0\'a0\'a0\'a0 results = Entrez.read(handle)\
\'a0\'a0\'a0\'a0 \cf2 \strokec2 return \cf3 \strokec3 results\
\'a0\
\'a0\
\'a0\cf2 \strokec2 def \cf4 \strokec4 fetch_details\cf3 \strokec3 (id_list):\
\'a0\'a0\'a0\'a0 ids = \cf5 \strokec5 ','\cf3 \strokec3 .join(id_list)\
\'a0\'a0\'a0\'a0 Entrez.email = \cf5 \strokec5 'email' \cf6 \strokec6 #enter email\cf5 \strokec5 \
\'a0\'a0\'a0\'a0 \cf3 \strokec3 handle = Entrez.efetch(\cf7 \strokec7 db\cf3 \strokec3 =\cf5 \strokec5 'pubmed'\cf2 \strokec2 ,\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf7 \strokec7 retmode\cf3 \strokec3 =\cf5 \strokec5 'xml'\cf2 \strokec2 ,\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf7 \strokec7 id\cf3 \strokec3 =ids)\
\'a0\'a0\'a0\'a0 results = Entrez.read(handle)\
\'a0\'a0\'a0\'a0 \cf2 \strokec2 return \cf3 \strokec3 results\
\'a0\
\'a0\
\'a0wb = xl.load_workbook(\cf5 \strokec5 'file'\cf3 \strokec3 )#replace with excel file name\
\'a0sheet = wb[\cf5 \strokec5 'workbook'\cf3 \strokec3 ] #replace with workbook name\
\'a0\
\'a0\
\'a0howmanypapers = np.zeros(\cf7 \strokec7 shape\cf3 \strokec3 =[\cf8 \strokec8 y\cf2 \strokec2 ,\cf8 \strokec8 x\cf3 \strokec3 ])#replace with coordinates\
\'a0allidlists=[]\
\'a0\cf2 \strokec2 for \cf3 \strokec3 row \cf2 \strokec2 in \cf9 \strokec9 range\cf3 \strokec3 (\cf8 \strokec8 y\cf2 \strokec2 , \cf3 \strokec3 sheet.max_row + \cf8 \strokec8 1\cf3 \strokec3 ): #replace with coordinates\
\'a0\'a0\'a0\'a0 \cf2 \strokec2 try\cf3 \strokec3 :\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 cell = sheet.cell(row\cf2 \strokec2 , \cf8 \strokec8 x\cf3 \strokec3 ) #replace with coordinates\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 results = search(cell.value + \cf5 \strokec5 ' AND ubiquitin AND proteasome AND system'\cf3 \strokec3 )\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 id_list = results[\cf5 \strokec5 'IdList'\cf3 \strokec3 ]\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 allidlists.append(id_list)\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 howmanypapers[row-\cf8 \strokec8 2\cf3 \strokec3 ] = \cf9 \strokec9 len\cf3 \strokec3 (id_list)\cf10 \strokec10 \'a0\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf3 \strokec3 finallist = (\cf5 \strokec5 'with UPS for ' \cf3 \strokec3 + cell.value + \cf5 \strokec5 ' found ' \cf3 \strokec3 + \cf9 \strokec9 str\cf3 \strokec3 (\cf9 \strokec9 len\cf3 \strokec3 (id_list)) + \cf5 \strokec5 ' publications' \cf3 \strokec3 )\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf9 \strokec9 print\cf3 \strokec3 (finallist)\
\'a0\
\'a0\'a0\'a0\'a0 \cf2 \strokec2 except\cf3 \strokec3 :\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf9 \strokec9 print\cf3 \strokec3 (\cf5 \strokec5 'error reading row' \cf3 \strokec3 + \cf9 \strokec9 str\cf3 \strokec3 (row) + \cf9 \strokec9 str\cf3 \strokec3 (\cf9 \strokec9 len\cf3 \strokec3 (id_list)))\cf10 \strokec10 \'a0\
\'a0\
\'a0\cf2 \strokec2 for \cf3 \strokec3 row \cf2 \strokec2 in \cf9 \strokec9 range\cf3 \strokec3 (\cf8 \strokec8 y\cf2 \strokec2 , \cf3 \strokec3 sheet.max_row + \cf8 \strokec8 1\cf3 \strokec3 ): #replace with coordinates\
\'a0\'a0\'a0\'a0 \cf2 \strokec2 try\cf3 \strokec3 :\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 cell = sheet.cell(row\cf2 \strokec2 , \cf8 \strokec8 x\cf3 \strokec3 ) #replace with coordinates\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 results = search(cell.value + \cf5 \strokec5 ' AND autophagy'\cf3 \strokec3 )\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 id_list = results[\cf5 \strokec5 'IdList'\cf3 \strokec3 ]\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 allidlists.append(id_list)\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 howmanypapers[row-\cf8 \strokec8 2\cf3 \strokec3 ] = \cf9 \strokec9 len\cf3 \strokec3 (id_list)\cf10 \strokec10 \'a0\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf3 \strokec3 finallist = (\cf5 \strokec5 'with Autophagy for ' \cf3 \strokec3 + cell.value + \cf5 \strokec5 ' found ' \cf3 \strokec3 + \cf9 \strokec9 str\cf3 \strokec3 (\cf9 \strokec9 len\cf3 \strokec3 (id_list)) + \cf5 \strokec5 ' publications' \cf3 \strokec3 )\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf9 \strokec9 print\cf3 \strokec3 (finallist)\cf10 \strokec10 \'a0\
\'a0\'a0\'a0\'a0 \cf2 \strokec2 except\cf3 \strokec3 :\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf9 \strokec9 print\cf3 \strokec3 (\cf5 \strokec5 'error reading cell ' \cf3 \strokec3 + \cf9 \strokec9 str\cf3 \strokec3 (row))\cf10 \strokec10 \'a0\
\'a0\
\'a0\cf2 \strokec2 for \cf3 \strokec3 row \cf2 \strokec2 in \cf9 \strokec9 range\cf3 \strokec3 (\cf8 \strokec8 y\cf2 \strokec2 , \cf3 \strokec3 sheet.max_row + \cf8 \strokec8 1\cf3 \strokec3 ): #replace with coordinates\
\'a0\'a0\'a0\'a0 \cf2 \strokec2 try\cf3 \strokec3 :\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 cell = sheet.cell(row\cf2 \strokec2 , \cf8 \strokec8 x\cf3 \strokec3 ) #replace with coordinates\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 results = search(cell.value + \cf5 \strokec5 ' AND proteostasis'\cf3 \strokec3 )\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 id_list = results[\cf5 \strokec5 'IdList'\cf3 \strokec3 ]\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 allidlists.append(id_list)\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 howmanypapers[row-\cf8 \strokec8 2\cf3 \strokec3 ] = \cf9 \strokec9 len\cf3 \strokec3 (id_list)\cf10 \strokec10 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf3 \strokec3 finallist = (\cf5 \strokec5 'with Proteostasis for ' \cf3 \strokec3 + cell.value + \cf5 \strokec5 ' found ' \cf3 \strokec3 + \cf9 \strokec9 str\cf3 \strokec3 (\cf9 \strokec9 len\cf3 \strokec3 (id_list)) + \cf5 \strokec5 ' publications' \cf3 \strokec3 )\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf9 \strokec9 print\cf3 \strokec3 (finallist)\cf10 \strokec10 \'a0\
\'a0\'a0\'a0\'a0 \cf2 \strokec2 except\cf3 \strokec3 :\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf9 \strokec9 print\cf3 \strokec3 (\cf5 \strokec5 'error reading cell ' \cf3 \strokec3 + \cf9 \strokec9 str\cf3 \strokec3 (row))}